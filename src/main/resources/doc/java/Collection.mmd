Mind Map generated by NB MindMap plugin   
> __version__=`1.1`,showJumps=`true`
---

# 集合
- NOTE
<pre>Iterator&#25509;&#21475;
&#26041;&#27861;&#65306;
  1. public boolean hasNext()&#65306;&#21028;&#26029;&#26159;&#21542;&#36824;&#26377;&#19979;&#19968;&#20010;&#20803;&#32032;&#12290;
  2. public Object next()&#65306;&#21462;&#24471;&#19979;&#19968;&#20010;&#20803;&#32032;&#65292;&#27880;&#24847;&#36820;&#22238;&#20540;&#20026; Object&#65292;&#21487;&#33021;&#38656;&#35201;&#31867;&#22411;&#36716;&#25442;&#12290;
    &#22914;&#26524;&#19981;&#20877;&#26377;&#21487;&#21462;&#20803;&#32032;&#65292;&#21017;&#25243;&#20986;NoSuchElementException&#24322;&#24120;&#12290;
    &#22312;&#20351;&#29992;&#35813;&#26041;&#27861;&#20043;&#21069;&#65292;&#24517;&#39035;&#20808;&#20351;&#29992;hasNext()&#26041;&#27861;&#21028;&#26029;&#12290;
  3. public void remove()&#65306;&#21024;&#38500;&#24403;&#21069;&#20803;&#32032;&#65292;&#24456;&#23569;&#29992;&#12290;

Collection&#25509;&#21475;
&#35813;&#25509;&#21475;&#26159;Set&#21644;List&#30340;&#29238;&#25509;&#21475;&#65292;&#20027;&#35201;&#25552;&#20379;&#20102;&#19979;&#38754;&#30340;&#26041;&#27861;&#65306;

  1. public boolean add(Object?o)&#65306;&#24448;&#38598;&#21512;&#20013;&#28155;&#21152;&#26032;&#20803;&#32032;&#12290;&#28155;&#21152;&#25104;&#21151;&#65292;&#36820;&#22238;true&#65292;&#21542;&#21017;&#36820;&#22238;false&#12290;
  2. public Iterator iterator()&#65306;&#36820;&#22238;Iterator&#23545;&#35937;&#65292;&#36825;&#26679;&#23601;&#21487;&#20197;&#36941;&#21382;&#38598;&#21512;&#20013;&#30340;&#25152;&#26377;&#20803;&#32032;&#20102;&#12290;
  3. public boolean contains(Object?o)&#65306;&#21028;&#26029;&#38598;&#21512;&#20013;&#26159;&#21542;&#21253;&#21547;&#25351;&#23450;&#30340;&#20803;&#32032;&#12290;
  4. public int size()&#65306;&#21462;&#24471;&#38598;&#21512;&#20013;&#20803;&#32032;&#30340;&#20010;&#25968;&#12290;
  5. public void clear()&#65306;&#21024;&#38500;&#38598;&#21512;&#20013;&#30340;&#25152;&#26377;&#20803;&#32032;&#12290; 
Collection&#26159;&#26368;&#22522;&#26412;&#30340;&#38598;&#21512;&#25509;&#21475;&#65292;&#19968;&#20010;Collection&#20195;&#34920;&#19968;&#32452;Object&#65292;&#21363;Collection&#30340;&#20803;&#32032;&#65288;Elements&#65289;&#12290;
&#19968;&#20123;Collection&#20801;&#35768;&#30456;&#21516;&#30340;&#20803;&#32032;&#32780;&#21478;&#19968;&#20123;&#19981;&#34892;&#12290;&#19968;&#20123;&#33021;&#25490;&#24207;&#32780;&#21478;&#19968;&#20123;&#19981;&#34892;&#12290;Java SDK&#19981;&#25552;&#20379;&#30452;&#25509;&#32487;&#25215;&#33258;Collection&#30340;&#31867;&#65292;
JavaSDK&#25552;&#20379;&#30340;&#31867;&#37117;&#26159;&#32487;&#25215;&#33258;Collection&#30340;&ldquo;&#23376;&#25509;&#21475;&rdquo;&#22914;List&#21644;Set&#12290;
&#25152;&#26377;&#23454;&#29616;Collection&#25509;&#21475;&#30340;&#31867;&#37117;&#24517;&#39035;&#25552;&#20379;&#20004;&#20010;&#26631;&#20934;&#30340;&#26500;&#36896;&#20989;&#25968;&#65306;&#26080;&#21442;&#25968;&#30340;&#26500;&#36896;&#20989;&#25968;&#29992;&#20110;&#21019;&#24314;&#19968;&#20010;&#31354;&#30340;Collection&#65292;
&#26377;&#19968;&#20010;Collection&#21442;&#25968;&#30340;&#26500;&#36896;&#20989;&#25968;&#29992;&#20110;&#21019;&#24314;&#19968;&#20010;&#26032;&#30340;Collection&#65292;&#36825;&#20010;&#26032;&#30340;Collection&#19982;&#20256;&#20837;&#30340;Collection&#26377;&#30456;&#21516;&#30340;&#20803;&#32032;&#12290;
&#21518;&#19968;&#20010;&#26500;&#36896;&#20989;&#25968;&#20801;&#35768;&#29992;&#25143;&#22797;&#21046;&#19968;&#20010;Collection&#12290;&#22914;&#20309;&#36941;&#21382;Collection&#20013;&#30340;&#27599;&#19968;&#20010;&#20803;&#32032;&#65311;
&#19981;&#35770;Collection&#30340;&#23454;&#38469;&#31867;&#22411;&#22914;&#20309;&#65292;&#23427;&#37117;&#25903;&#25345;&#19968;&#20010;iterator()&#30340;&#26041;&#27861;&#65292;&#35813;&#26041;&#27861;&#36820;&#22238;&#19968;&#20010;&#36845;&#20195;&#23376;&#65292;
&#20351;&#29992;&#35813;&#36845;&#20195;&#23376;&#21363;&#21487;&#36880;&#19968;&#35775;&#38382;Collection&#20013;&#27599;&#19968;&#20010;&#20803;&#32032;&#12290;&#20856;&#22411;&#30340;&#29992;&#27861;&#22914;&#19979;&#65306; 
    Iterator it = collection.iterator(); // &#33719;&#24471;&#19968;&#20010;&#36845;&#20195;&#23376;
    while(it.hasNext()) {
        Object obj = it.next(); // &#24471;&#21040;&#19979;&#19968;&#20010;&#20803;&#32032;
    }

</pre>

## List
- NOTE
<pre>&#26377;&#23384;&#20648;&#39034;&#24207;, &#21487;&#37325;&#22797;  </pre>

### ArrayList
- NOTE
<pre>&#25968;&#32452;&#23454;&#29616;, &#26597;&#25214;&#24555;, &#22686;&#21024;&#24930;
  &#30001;&#20110;&#26159;&#25968;&#32452;&#23454;&#29616;, &#22312;&#22686;&#21644;&#21024;&#30340;&#26102;&#20505;&#20250;&#29301;&#25199;&#21040;&#25968;&#32452;  
    &#22686;&#23481;, &#20197;&#21450;&#25335;&#36125;&#20803;&#32032;. &#25152;&#20197;&#24930;&#12290;&#25968;&#32452;&#26159;&#21487;&#20197;&#30452;&#25509;  
    &#25353;&#32034;&#24341;&#26597;&#25214;, &#25152;&#20197;&#26597;&#25214;&#26102;&#36739;&#24555;  </pre>

### LinkList
- NOTE
<pre>LinkedList: &#38142;&#34920;&#23454;&#29616;, &#22686;&#21024;&#24555;, &#26597;&#25214;&#24930;  
  &#30001;&#20110;&#38142;&#34920;&#23454;&#29616;, &#22686;&#21152;&#26102;&#21482;&#35201;&#35753;&#21069;&#19968;&#20010;&#20803;&#32032;&#35760;&#20303;&#33258;&#24049;&#23601;&#21487;&#20197;, 
    &#21024;&#38500;&#26102;&#35753;&#21069;&#19968;&#20010;&#20803;&#32032;&#35760;&#20303;&#21518;&#19968;&#20010;&#20803;&#32032;, &#21518;&#19968;&#20010;&#20803;&#32032;&#35760;&#20303;&#21069;&#19968;&#20010;&#20803;&#32032;. 
    &#36825;&#26679;&#30340;&#22686;&#21024;&#25928;&#29575;&#36739;&#39640;&#20294;&#26597;&#35810;&#26102;&#38656;&#35201;&#19968;&#20010;&#19968;&#20010;&#30340;&#36941;&#21382;, &#25152;&#20197;&#25928;&#29575;&#36739;&#20302;</pre>

### Vector

### AbstractList

### AbstractSequentialList

## Set

### HashSet

### SortedSet

#### TreeSet

## Map
> leftSide=`true`


### HashMap

### SortedMap

#### TreeMap
